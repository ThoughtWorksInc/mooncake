mixin streamItem(title, author, activityAction, sourceClass, isUntrustedSource, isUnverifiedSignature)
  li.activity-item.clj--activity-item.func--activity-item(class="#{sourceClass}")
    a.activity-item__link.clj--activity-item__link.func--activity-item__link(href="#")
      .activity-item__avatar
        span.avatar__initials.clj--avatar__initials !C
      h2.activity-item__action
        span.activity-item__action__author.clj--activity-item__action__author.func--activity-item__action__author #{author}
        = " "
        span.activity-item__action__text.clj--activity-item__action.func--activity-item__action #{activityAction}
        = " "
        time.activity-item__time.clj--activity-item__time(datetime="10:32") !2 minutes ago
      h3.activity-item__title.clj--activity-item__title.func--activity-item__title !#{title}
      if isUntrustedSource==true || isUnverifiedSignature==true
        +streamItemSuspicious(isUntrustedSource)

mixin streamItemWarning()
  li.activity-error.clj--STRIP
    h2.activity-error__title
      span(data-l8n="html:feed/error-title-1") !We have hidden
      = " "
      span.activity-error__number-bubble 17
      = " "
      span(data-l8n="html:feed/error-title-2") !updates
    .activity-error__icon
    p.activity-error__description(data-l8n="html:feed/error-description-1") !These are missing details we use to verify their safety.
    p.activity-error__description(data-l8n="html:feed/error-description-2") !If you are happy to continue you can show hidden items:
    .activity-error__actions
      a.button(href="#", data-l8n="html:feed/error-button") !Show hidden items

mixin streamItemSuspicious(isUntrustedSource)
  if isUntrustedSource==true
    a.activity-item__suspicious.clj--activity-item__suspicious.activity-item__suspicious--untrusted-source.clj--activity-item__suspicious--untrusted-source.func--activity-item__suspicious--untrusted-source.clj--STRIP
      span(data-l8n="content:feed/suspicious-activity-untrusted-source")
        | !This activity's source could not be verified
  else
    a.activity-item__suspicious.clj--activity-item__suspicious.activity-item__suspicious--unverified-signature.clj--activity-item__suspicious--unverified-signature.func--activity-item__suspicious--unverified-signature.clj--STRIP
      span(data-l8n="content:feed/suspicious-activity-unverified-signature")
        | !Some details we use to verify this activity's validity are missing

mixin emptyStreamItem()
  li.empty-stream.clj--empty-activity-item.func--empty-activity-item
    a.empty-stream__link.clj--empty-stream__link(href="./customise-feed")
      h1.empty-stream__title(data-l8n="content:empty-feed/page-title") !You haven't chosen any activity feeds to follow
      .empty-stream__icon
      p.empty-stream__intro(data-l8n="content:empty-feed/intro") !Customise your feed here

mixin feedItemChild(feedName, activityType, isOn)
  - var feedInputID = feedName.replace(/ /g, "").toLowerCase() + "_-_" + activityType;
  li.feed-item-child.clj--feed-item-child
    label.feed-item-child__label.clj--feed-item-child__label.func--feed-item-child__label(for="#{feedInputID}")
      input.feed-item-child__checkbox.clj--feed-item-child__checkbox.func--feed-item-child__checkbox(type="checkbox", id="#{feedInputID}", name="#{feedInputID}", value="true", checked=isOn)
      span.feed-item-child__name.clj--feed-item-child__name.func--feed-item-child__name #{activityType}

mixin feedItem(feedName, isOn, isTrusted)
  - var feedInputID = feedName.replace(/ /g, "").toLowerCase();
  li.feed-item.clj--feed-item
    fieldset.feed-item__fieldset
      p.feed-item__name.clj--feed-item__name #{feedName}
      span.clj--STRIP.feed-item__trustworthiness.clj--feed-item__signed.func--feed-item__signed(data-l8n="content:customise-feed/feed-digitally-signed-false")
        if !isTrusted
          | !Unconfirmed source
        else
          | !Confirmed trusted source
      .feed-item__toggle-checkbox
        .checkbox.checkbox--none.clj--src-checkbox
      if block
        ul.feed-item__children-list.clj--feed-item__children-list
          block